name: Deploy Remix App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Debug Secrets (Safe Logging)
        run: |
          echo "Checking if secrets are loaded..."
          echo "SERVER_HOST: ${{ secrets.SERVER_HOST }}"
          echo "SERVER_USER: ${{ secrets.SERVER_USER }}"
          echo "SSH Key Length: $(echo '${{ secrets.SSH_PRIVATE_KEY }}' | wc -c | tr -d ' ') characters"

      - name: Test SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH Connection Successful'"

      - name: Create Deployment Archive
        run: |
          tar -czf remix-app.tar.gz --exclude=node_modules --exclude=.git --exclude=build .

      - name: Transfer Files to Server Using SCP
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          scp -o StrictHostKeyChecking=no -i ssh_key \
          remix-app.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting Deployment on Server..."

            cd ~

            echo "Extracting deployment files..."
            tar -xzf remix-app.tar.gz -C ~/remix-app

            cd ~/remix-app

            echo "Stopping old container..."
            docker stop remix-app || true
            docker rm remix-app || true

            echo "Building new Docker image..."
            docker build -t remix-app .

            echo "Running new container..."
            docker run -d --restart always --name remix-app -p 3000:3000 remix-app

            echo "Deployment Successful!"
